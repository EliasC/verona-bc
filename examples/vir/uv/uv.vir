lib
  @printval = "printval"(dyn): none
  @puts = "puts"(ptr): i32
  @uv_os_homedir = "uv_os_homedir"(ptr, ptr): i32
  @async_create = "async_create"(i32): ptr
  @async_close = "async_close"(ptr): none
  @async_set_arg = "async_set_arg"(ptr, dyn): bool
  @async_set_cb0 = "async_set_cb0"(ptr, dyn): bool
  @async_cb0 = "async_cb0"(ptr): none
  @uv_timer_start = "uv_timer_start"(ptr, ptr, u64, u64): i32
  @uv_timer_stop = "uv_timer_stop"(ptr): i32

class @timer
  @handle: ptr
  @counter: usize
  @cb0 @timer_cb0

func @timer_cb0($self: @timer): none
  $one = const usize 1
  $done = const usize 3
  $counter_ref = ref $self @counter
  $counter = load $counter_ref
  $cond = ge $counter $done
  cond $cond ^done ^not_done
^done
  $handle_ref = ref $self @handle
  $handle = load $handle_ref
  $_ = ffi @uv_timer_stop($handle)
  $_ = ffi @async_close($handle)
  jump ^return
^not_done
  $counter = add $counter $one
  $_ = ffi @printval($counter)
  $_ = store $counter_ref $counter
  jump ^return
^return
  $none = const none
  ret $none

func @print_home(): none
  $home = stack u8[256]
  $home_ptr = makeptr $home
  $home_len = len $home
  $home_len_ptr = makeptr $home_len
  $_ = ffi @uv_os_homedir($home_ptr, $home_len_ptr)
  $_ = ffi @puts($home_ptr)
  $ret = const none
  ret $ret

func @main(): i32
  $_ = call @print_home()
  $timer_type = const i32 13
  $timer_h = ffi @async_create($timer_type)
  $counter = const usize 0
  $timer = region rc @timer($timer_h, $counter)
  $cb0 = lookup $timer @cb0
  $_ = ffi @async_set_arg($timer_h, $timer)
  $_ = ffi @async_set_cb0($timer_h, $cb0)
  $timeout = const u64 1000
  $cb0 = lookup @async_cb0
  $_ = ffi @uv_timer_start($timer_h, $cb0, $timeout, $timeout)
  $ret = const i32 0
  ret $ret
